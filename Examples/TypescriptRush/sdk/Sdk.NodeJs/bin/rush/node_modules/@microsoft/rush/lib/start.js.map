{"version":3,"file":"start.js","sourceRoot":"","sources":["../src/start.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n// The minimal set of imports that are safe even for ancient NodeJS versions:\r\nimport * as colors from 'colors';\r\nimport * as os from 'os';\r\nimport * as semver from 'semver';\r\n\r\nconst nodeVersion: string = process.versions.node;\r\n\r\n// tslint:disable-next-line\r\n\r\n// We are on an ancient version of NodeJS that is known not to work with Rush\r\nif (semver.satisfies(nodeVersion, '<= 6.4.0')) {\r\n  console.error(colors.red(`Your version of Node.js (${nodeVersion}) is very old and incompatible with Rush.`\r\n    + ` Please upgrade to the latest Long-Term Support (LTS) version.`));\r\n  process.exit(1);\r\n}\r\n\r\n// We are on a much newer release than we have tested and support\r\n// tslint:disable-next-line\r\nelse if (semver.satisfies(nodeVersion, '>=11.0.0')) {\r\n  console.warn(colors.yellow(`Your version of Node.js (${nodeVersion}) has not been tested with this release of Rush.`\r\n    + ` The Rush team will not accept issue reports for it.`\r\n    + ` Please consider upgrading Rush or downgrading Node.js.`));\r\n}\r\n\r\n// We are not on an LTS release\r\n// tslint:disable-next-line\r\nelse if (!semver.satisfies(nodeVersion, '^6.9.0')\r\n      && !semver.satisfies(nodeVersion, '^8.9.0')\r\n      && !semver.satisfies(nodeVersion, '^10.13.0')) {\r\n  console.warn(colors.yellow(`Your version of Node.js (${nodeVersion}) is not a Long-Term Support (LTS) release.`\r\n    + ` These versions frequently contain bugs, and the Rush team will not accept issue reports for them.`\r\n    + ` Please consider installing a stable release.`));\r\n}\r\n\r\nimport {\r\n  Text,\r\n  PackageJsonLookup\r\n} from '@microsoft/node-core-library';\r\nimport { EnvironmentVariableNames } from '@microsoft/rush-lib';\r\nimport * as rushLib from '@microsoft/rush-lib';\r\n\r\nimport { RushCommandSelector } from './RushCommandSelector';\r\nimport { RushVersionSelector } from './RushVersionSelector';\r\nimport { MinimalRushConfiguration } from './MinimalRushConfiguration';\r\n\r\n// Load the configuration\r\nconst configuration: MinimalRushConfiguration | undefined = MinimalRushConfiguration.loadFromDefaultLocation();\r\n\r\nconst currentPackageVersion: string = PackageJsonLookup.loadOwnPackageJson(__dirname).version;\r\n\r\nlet rushVersionToLoad: string | undefined = undefined;\r\n\r\nconst previewVersion: string | undefined = process.env[EnvironmentVariableNames.RUSH_PREVIEW_VERSION];\r\n\r\nif (previewVersion) {\r\n  if (!semver.valid(previewVersion, false)) {\r\n    console.error(colors.red(`Invalid value for RUSH_PREVIEW_VERSION environment variable: \"${previewVersion}\"`));\r\n    process.exit(1);\r\n  }\r\n\r\n  rushVersionToLoad = previewVersion;\r\n\r\n  const lines: string[] = [];\r\n  lines.push(\r\n    `*********************************************************************`,\r\n    `* WARNING! THE \"RUSH_PREVIEW_VERSION\" ENVIRONMENT VARIABLE IS SET.  *`,\r\n    `*                                                                   *`,\r\n    `* You are previewing Rush version:        ${Text.padEnd(previewVersion, 25)} *`\r\n  );\r\n\r\n  if (configuration) {\r\n    lines.push(\r\n      `* The rush.json configuration asks for:   ${Text.padEnd(configuration.rushVersion, 25)} *`\r\n    );\r\n  }\r\n\r\n  lines.push(\r\n    `*                                                                   *`,\r\n    `* To restore the normal behavior, unset the RUSH_PREVIEW_VERSION    *`,\r\n    `* environment variable.                                             *`,\r\n    `*********************************************************************`\r\n  );\r\n\r\n  console.error(lines\r\n    .map(line => colors.black(colors.bgYellow(line)))\r\n    .join(os.EOL));\r\n\r\n} else if (configuration) {\r\n  rushVersionToLoad = configuration.rushVersion;\r\n}\r\n\r\n// If we are previewing an older Rush that doesn't understand the RUSH_PREVIEW_VERSION variable,\r\n// then unset it.\r\nif (rushVersionToLoad && semver.lt(rushVersionToLoad, '5.0.0-dev.18')) {\r\n  delete process.env[EnvironmentVariableNames.RUSH_PREVIEW_VERSION];\r\n}\r\n\r\n// If we're inside a repo folder, and it's requesting a different version, then use the RushVersionManager to\r\n// install it\r\nif (rushVersionToLoad && rushVersionToLoad !== currentPackageVersion) {\r\n  const versionSelector: RushVersionSelector = new RushVersionSelector(currentPackageVersion);\r\n  versionSelector.ensureRushVersionInstalled(rushVersionToLoad, configuration)\r\n    .catch((error: Error) => {\r\n      console.log(colors.red('Error: ' + error.message));\r\n    });\r\n} else {\r\n  // Otherwise invoke the rush-lib that came with this rush package\r\n\r\n  // Rush is \"managed\" if its version and configuration are dictated by a repo's rush.json\r\n  const isManaged: boolean = !!configuration;\r\n\r\n  RushCommandSelector.execute(currentPackageVersion, isManaged, rushLib);\r\n}\r\n"]}